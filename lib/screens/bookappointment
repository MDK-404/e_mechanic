import 'package:flutter/material.dart';
//import 'package:firebase_database/firebase_database.dart';

class BookAppointmentScreen extends StatefulWidget {
  @override
  _BookAppointmentScreenState createState() => _BookAppointmentScreenState();
}

class _BookAppointmentScreenState extends State<BookAppointmentScreen> {
  String _serviceType = 'Car Tuning';
  DateTime _selectedDate = DateTime.now();
  String _selectedArea = 'Area 1';
  String _selectedMechanic = '';
  List<String> _mechanics = [];

  // Initialize Firebase Realtime Database reference
  //final DatabaseReference _dbRef = FirebaseDatabase.instance.reference();

  // @override
  // void initState() {
  //   super.initState();
  //   _loadMechanics();
  // }

  // void _loadMechanics() {
  //   // Load mechanics based on selected area from Firebase Database
  //   _dbRef.child('mechanics/$_selectedArea').once().then((DataSnapshot snapshot) {
  //     List<String> mechanicsList = [];
  //     if (snapshot.value != null) {
  //       Map<String, dynamic> mechanicsData = Map<String, dynamic>.from(snapshot.value);
  //       mechanicsData.forEach((key, value) {
  //         mechanicsList.add(key); // Use key or value based on data structure
  //       });
  //     }
  //     setState(() {
  //       _mechanics = mechanicsList;
  //       if (_mechanics.isNotEmpty) {
  //         _selectedMechanic = _mechanics.first;
  //       }
  //     });
  //   });
  // }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Book Appointment'),
        centerTitle: true,
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Service type
            Text('Service Type:'),
            DropdownButton<String>(
              value: _serviceType,
              onChanged: (String? newValue) {
                setState(() {
                  _serviceType = newValue!;
                });
              },
              items: ['Car Tuning', 'Denting', 'Others']
                  .map<DropdownMenuItem<String>>((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
            ),
            // Date picker
            SizedBox(height: 16.0),
            Text('Select Date:'),
            ElevatedButton(
              onPressed: () async {
                DateTime? pickedDate = await showDatePicker(
                  context: context,
                  initialDate: _selectedDate,
                  firstDate: DateTime.now(),
                  lastDate: DateTime(DateTime.now().year + 1),
                );
                if (pickedDate != null && pickedDate != _selectedDate) {
                  setState(() {
                    _selectedDate = pickedDate;
                  });
                }
              },
              child: Text('Select Date: ${_selectedDate.toLocal()}'.split(' ')[0]),
            ),
            // Area selection
            SizedBox(height: 16.0),
            // Text('Select Area:'),
            // DropdownButton<String>(
            //   value: _selectedArea,
            //   onChanged: (String? newValue) {
            //     setState(() {
            //       _selectedArea = newValue!;
            //       _loadMechanics();
            //     });
            //   },
            //   items: ['Area 1', 'Area 2', 'Area 3']
            //       .map<DropdownMenuItem<String>>((String value) {
            //     return DropdownMenuItem<String>(
            //       value: value,
            //       child: Text(value),
            //     );
            //   }).toList(),
            // ),
            // Mechanic selection
            SizedBox(height: 16.0),
            Text('Select Mechanic:'),
            DropdownButton<String>(
              value: _selectedMechanic,
              onChanged: (String? newValue) {
                setState(() {
                  _selectedMechanic = newValue!;
                });
              },
            //   items: _mechanics.map<DropdownMenuItem<String>>((String value) {
            //     return DropdownMenuItem<String>(
            //       value: value,
            //       child: Text(value),
            //     );
            //   }).toList(),
            // ),
            // Button to confirm appointment
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: () {
                // Confirmation action
                // Example: Confirm appointment with selected options
              },
              child: Text('Confirm Appointment'),
            ),
          ],
        ),
      ),
    );
  }
}
